{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Pie}from'react-chartjs-2';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import'./PieChart.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const PieChart=_ref=>{let{apiBaseUrl,selectedMonth}=_ref;const[chartData,setChartData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{fetchPieChartData();// eslint-disable-next-line\n},[selectedMonth]);const fetchPieChartData=async()=>{try{setLoading(true);const response=await axios.get(`${apiBaseUrl}/pie-chart`,{params:{month:selectedMonth}});setChartData(response.data);}catch(err){console.error('Error fetching pie chart data:',err);setError('Failed to fetch pie chart data');}finally{setLoading(false);}};const formatMonth=month=>{return month.charAt(0).toUpperCase()+month.slice(1);};const generateColors=count=>{const colors=[];for(let i=0;i<count;i++){const hue=i*137%360;colors.push(`hsla(${hue}, 70%, 60%, 0.8)`);}return colors;};const pieData={labels:chartData.map(item=>item.category),datasets:[{data:chartData.map(item=>item.count),backgroundColor:generateColors(chartData.length),borderColor:'rgba(255, 255, 255, 0.8)',borderWidth:1}]};const pieOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'right',labels:{boxWidth:15,padding:15}},title:{display:true,text:`Category Distribution - ${formatMonth(selectedMonth)}`}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"pie-chart-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Category Distribution - \",formatMonth(selectedMonth)]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading chart data...\"}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}):/*#__PURE__*/_jsx(\"div\",{className:\"chart-wrapper\",children:/*#__PURE__*/_jsx(Pie,{options:pieOptions,data:pieData,height:300})})]});};export default PieChart;","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxs","_jsxs","jsx","_jsx","register","PieChart","_ref","apiBaseUrl","selectedMonth","chartData","setChartData","loading","setLoading","error","setError","fetchPieChartData","response","get","params","month","data","err","console","formatMonth","charAt","toUpperCase","slice","generateColors","count","colors","i","hue","push","pieData","labels","map","item","category","datasets","backgroundColor","length","borderColor","borderWidth","pieOptions","responsive","maintainAspectRatio","plugins","legend","position","boxWidth","padding","title","display","text","className","children","options","height"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/components/PieChart/PieChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './PieChart.css';\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst PieChart = ({ apiBaseUrl, selectedMonth }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPieChartData();\r\n    // eslint-disable-next-line\r\n  }, [selectedMonth]);\r\n\r\n  const fetchPieChartData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${apiBaseUrl}/pie-chart`, {\r\n        params: { month: selectedMonth }\r\n      });\r\n      setChartData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching pie chart data:', err);\r\n      setError('Failed to fetch pie chart data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatMonth = (month) => {\r\n    return month.charAt(0).toUpperCase() + month.slice(1);\r\n  };\r\n\r\n  const generateColors = (count) => {\r\n    const colors = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const hue = (i * 137) % 360;\r\n      colors.push(`hsla(${hue}, 70%, 60%, 0.8)`);\r\n    }\r\n    return colors;\r\n  };\r\n\r\n  const pieData = {\r\n    labels: chartData.map(item => item.category),\r\n    datasets: [\r\n      {\r\n        data: chartData.map(item => item.count),\r\n        backgroundColor: generateColors(chartData.length),\r\n        borderColor: 'rgba(255, 255, 255, 0.8)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const pieOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          boxWidth: 15,\r\n          padding: 15\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Category Distribution - ${formatMonth(selectedMonth)}`,\r\n      },\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pie-chart-container\">\r\n      <h2>Category Distribution - {formatMonth(selectedMonth)}</h2>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading chart data...</div>\r\n      ) : error ? (\r\n        <div className=\"error\">{error}</div>\r\n      ) : (\r\n        <div className=\"chart-wrapper\">\r\n          <Pie options={pieOptions} data={pieData} height={300} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}