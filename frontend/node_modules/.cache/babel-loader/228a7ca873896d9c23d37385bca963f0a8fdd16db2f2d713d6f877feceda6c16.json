{"ast":null,"code":"var _jsxFileName = \"E:\\\\Roxiler\\\\mern-transaction-dashboard\\\\frontend\\\\src\\\\components\\\\PieChart\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport './PieChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst PieChart = ({\n  apiBaseUrl,\n  selectedMonth\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchPieChartData();\n  }, [selectedMonth]);\n  const fetchPieChartData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${apiBaseUrl}/pie-chart`, {\n        params: {\n          month: selectedMonth\n        }\n      });\n      setChartData(response.data);\n    } catch (err) {\n      console.error('Error fetching pie chart data:', err);\n      setError('Failed to fetch pie chart data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatMonth = month => {\n    return month.charAt(0).toUpperCase() + month.slice(1);\n  };\n  const generateColors = count => {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n      const hue = i * 137 % 360;\n      colors.push(`hsla(${hue}, 70%, 60%, 0.8)`);\n    }\n    return colors;\n  };\n  const pieData = {\n    labels: chartData.map(item => item.category),\n    datasets: [{\n      data: chartData.map(item => item.count),\n      backgroundColor: generateColors(chartData.length),\n      borderColor: 'rgba(255, 255, 255, 0.8)',\n      borderWidth: 1\n    }]\n  };\n  const pieOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 15,\n          padding: 15\n        }\n      },\n      title: {\n        display: true,\n        text: `Category Distribution - ${formatMonth(selectedMonth)}`\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pie-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Category Distribution - \", formatMonth(selectedMonth)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        options: pieOptions,\n        data: pieData,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"UhoX46EvB9/nbJ7sTO7dmaxl6VI=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","PieChart","apiBaseUrl","selectedMonth","_s","chartData","setChartData","loading","setLoading","error","setError","fetchPieChartData","response","get","params","month","data","err","console","formatMonth","charAt","toUpperCase","slice","generateColors","count","colors","i","hue","push","pieData","labels","map","item","category","datasets","backgroundColor","length","borderColor","borderWidth","pieOptions","responsive","maintainAspectRatio","plugins","legend","position","boxWidth","padding","title","display","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","height","_c","$RefreshReg$"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/components/PieChart/PieChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './PieChart.css';\r\n\r\nChartJS.register(\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst PieChart = ({ apiBaseUrl, selectedMonth }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPieChartData();\r\n  }, [selectedMonth]);\r\n\r\n  const fetchPieChartData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${apiBaseUrl}/pie-chart`, {\r\n        params: { month: selectedMonth }\r\n      });\r\n      setChartData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching pie chart data:', err);\r\n      setError('Failed to fetch pie chart data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatMonth = (month) => {\r\n    return month.charAt(0).toUpperCase() + month.slice(1);\r\n  };\r\n\r\n  const generateColors = (count) => {\r\n    const colors = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const hue = (i * 137) % 360;\r\n      colors.push(`hsla(${hue}, 70%, 60%, 0.8)`);\r\n    }\r\n    return colors;\r\n  };\r\n\r\n  const pieData = {\r\n    labels: chartData.map(item => item.category),\r\n    datasets: [\r\n      {\r\n        data: chartData.map(item => item.count),\r\n        backgroundColor: generateColors(chartData.length),\r\n        borderColor: 'rgba(255, 255, 255, 0.8)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const pieOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n        labels: {\r\n          boxWidth: 15,\r\n          padding: 15\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Category Distribution - ${formatMonth(selectedMonth)}`,\r\n      },\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pie-chart-container\">\r\n      <h2>Category Distribution - {formatMonth(selectedMonth)}</h2>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading chart data...</div>\r\n      ) : error ? (\r\n        <div className=\"error\">{error}</div>\r\n      ) : (\r\n        <div className=\"chart-wrapper\">\r\n          <Pie options={pieOptions} data={pieData} height={300} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}