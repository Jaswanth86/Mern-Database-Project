{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import'./BarChart.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const BarChart=_ref=>{let{apiBaseUrl,selectedMonth}=_ref;const[chartData,setChartData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{fetchBarChartData();// eslint-disable-next-line\n},[selectedMonth]);const fetchBarChartData=async()=>{try{setLoading(true);const response=await axios.get(`${apiBaseUrl}/bar-chart`,{params:{month:selectedMonth}});setChartData(response.data);}catch(err){console.error('Error fetching bar chart data:',err);setError('Failed to fetch bar chart data');}finally{setLoading(false);}};const formatMonth=month=>{return month.charAt(0).toUpperCase()+month.slice(1);};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{display:false},title:{display:true,text:`Price Range Distribution - ${formatMonth(selectedMonth)}`}},scales:{y:{beginAtZero:true,title:{display:true,text:'Number of Items'}},x:{title:{display:true,text:'Price Range'}}}};const barData={labels:chartData.map(item=>item.range),datasets:[{label:'Number of Items',data:chartData.map(item=>item.count),backgroundColor:'rgba(54, 162, 235, 0.7)',borderColor:'rgb(54, 162, 235)',borderWidth:1}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"bar-chart-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Bar Chart - \",formatMonth(selectedMonth)]}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading chart data...\"}):error?/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}):/*#__PURE__*/_jsx(\"div\",{className:\"chart-wrapper\",children:/*#__PURE__*/_jsx(Bar,{options:chartOptions,data:barData,height:300})})]});};export default BarChart;","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxs","_jsxs","jsx","_jsx","register","BarChart","_ref","apiBaseUrl","selectedMonth","chartData","setChartData","loading","setLoading","error","setError","fetchBarChartData","response","get","params","month","data","err","console","formatMonth","charAt","toUpperCase","slice","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","title","text","scales","y","beginAtZero","x","barData","labels","map","item","range","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","options","height"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/components/BarChart/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './BarChart.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst BarChart = ({ apiBaseUrl, selectedMonth }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchBarChartData();\r\n    // eslint-disable-next-line\r\n  }, [selectedMonth]);\r\n\r\n  const fetchBarChartData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${apiBaseUrl}/bar-chart`, {\r\n        params: { month: selectedMonth }\r\n      });\r\n      setChartData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching bar chart data:', err);\r\n      setError('Failed to fetch bar chart data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatMonth = (month) => {\r\n    return month.charAt(0).toUpperCase() + month.slice(1);\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Price Range Distribution - ${formatMonth(selectedMonth)}`,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Items'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Price Range'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const barData = {\r\n    labels: chartData.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'Number of Items',\r\n        data: chartData.map(item => item.count),\r\n        backgroundColor: 'rgba(54, 162, 235, 0.7)',\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <h2>Bar Chart - {formatMonth(selectedMonth)}</h2>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading chart data...</div>\r\n      ) : error ? (\r\n        <div className=\"error\">{error}</div>\r\n      ) : (\r\n        <div className=\"chart-wrapper\">\r\n          <Bar options={chartOptions} data={barData} height={300} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}