{"ast":null,"code":"var _jsxFileName = \"E:\\\\Roxiler\\\\mern-transaction-dashboard\\\\frontend\\\\src\\\\components\\\\BarChart\\\\BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './BarChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst BarChart = ({\n  apiBaseUrl,\n  selectedMonth\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchBarChartData();\n    // eslint-disable-next-line\n  }, [selectedMonth]);\n  const fetchBarChartData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${apiBaseUrl}/bar-chart`, {\n        params: {\n          month: selectedMonth\n        }\n      });\n      setChartData(response.data);\n    } catch (err) {\n      console.error('Error fetching bar chart data:', err);\n      setError('Failed to fetch bar chart data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatMonth = month => {\n    return month.charAt(0).toUpperCase() + month.slice(1);\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Price Range Distribution - ${formatMonth(selectedMonth)}`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Number of Items'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Price Range'\n        }\n      }\n    }\n  };\n  const barData = {\n    labels: chartData.map(item => item.range),\n    datasets: [{\n      label: 'Number of Items',\n      data: chartData.map(item => item.count),\n      backgroundColor: 'rgba(54, 162, 235, 0.7)',\n      borderColor: 'rgb(54, 162, 235)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Bar Chart - \", formatMonth(selectedMonth)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        options: chartOptions,\n        data: barData,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"UhoX46EvB9/nbJ7sTO7dmaxl6VI=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","BarChart","apiBaseUrl","selectedMonth","_s","chartData","setChartData","loading","setLoading","error","setError","fetchBarChartData","response","get","params","month","data","err","console","formatMonth","charAt","toUpperCase","slice","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","title","text","scales","y","beginAtZero","x","barData","labels","map","item","range","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","height","_c","$RefreshReg$"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/components/BarChart/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './BarChart.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst BarChart = ({ apiBaseUrl, selectedMonth }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchBarChartData();\r\n    // eslint-disable-next-line\r\n  }, [selectedMonth]);\r\n\r\n  const fetchBarChartData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${apiBaseUrl}/bar-chart`, {\r\n        params: { month: selectedMonth }\r\n      });\r\n      setChartData(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching bar chart data:', err);\r\n      setError('Failed to fetch bar chart data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatMonth = (month) => {\r\n    return month.charAt(0).toUpperCase() + month.slice(1);\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Price Range Distribution - ${formatMonth(selectedMonth)}`,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Items'\r\n        }\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Price Range'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const barData = {\r\n    labels: chartData.map(item => item.range),\r\n    datasets: [\r\n      {\r\n        label: 'Number of Items',\r\n        data: chartData.map(item => item.count),\r\n        backgroundColor: 'rgba(54, 162, 235, 0.7)',\r\n        borderColor: 'rgb(54, 162, 235)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"bar-chart-container\">\r\n      <h2>Bar Chart - {formatMonth(selectedMonth)}</h2>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Loading chart data...</div>\r\n      ) : error ? (\r\n        <div className=\"error\">{error}</div>\r\n      ) : (\r\n        <div className=\"chart-wrapper\">\r\n          <Bar options={chartOptions} data={barData} height={300} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExBR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdwB,iBAAiB,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;EAEnB,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,GAAGX,UAAU,YAAY,EAAE;QAC1DY,MAAM,EAAE;UAAEC,KAAK,EAAEZ;QAAc;MACjC,CAAC,CAAC;MACFG,YAAY,CAACM,QAAQ,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAAC,gCAAgC,EAAEQ,GAAG,CAAC;MACpDP,QAAQ,CAAC,gCAAgC,CAAC;IAC5C,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,WAAW,GAAIJ,KAAK,IAAK;IAC7B,OAAOA,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGN,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE,8BAA8BX,WAAW,CAAChB,aAAa,CAAC;MAChE;IACF,CAAC;IACD4B,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBJ,KAAK,EAAE;UACLD,OAAO,EAAE,IAAI;UACbE,IAAI,EAAE;QACR;MACF,CAAC;MACDI,CAAC,EAAE;QACDL,KAAK,EAAE;UACLD,OAAO,EAAE,IAAI;UACbE,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMK,OAAO,GAAG;IACdC,MAAM,EAAE/B,SAAS,CAACgC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;IACzCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBzB,IAAI,EAAEX,SAAS,CAACgC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,KAAK,CAAC;MACvCC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,mBAAmB;MAChCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACE9C,OAAA;IAAK+C,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClChD,OAAA;MAAAgD,QAAA,GAAI,cAAY,EAAC5B,WAAW,CAAChB,aAAa,CAAC;IAAA;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAEhD5C,OAAO,gBACNR,OAAA;MAAK+C,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAClD1C,KAAK,gBACPV,OAAA;MAAK+C,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEtC;IAAK;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEpCpD,OAAA;MAAK+C,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BhD,OAAA,CAACV,GAAG;QAAC+D,OAAO,EAAE7B,YAAa;QAACP,IAAI,EAAEmB,OAAQ;QAACkB,MAAM,EAAE;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAtFIH,QAAQ;AAAAqD,EAAA,GAARrD,QAAQ;AAwFd,eAAeA,QAAQ;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}