{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';import TransactionsTable from'./components/TransactionsTable/TransactionsTable';import Statistics from'./components/Statistics/Statistics';import BarChart from'./components/BarChart/BarChart';import PieChart from'./components/PieChart/PieChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:5000/api';function App(){const[selectedMonth,setSelectedMonth]=useState('march');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const initializeDatabase=async()=>{try{setIsLoading(true);const response=await axios.get(`${API_BASE_URL}/initialize-database`);console.log('Database initialized:',response.data);alert('Database initialized successfully!');}catch(err){console.error('Error initializing database:',err);setError('Failed to initialize database. Please try again.');}finally{setIsLoading(false);}};useEffect(()=>{// Check if database needs initialization\nconst checkDatabase=async()=>{try{// Try to fetch transactions to see if DB is initialized\nawait axios.get(`${API_BASE_URL}/transactions?month=${selectedMonth}&page=1&perPage=1`);}catch(err){if(err.response&&err.response.status===500){// Database might need initialization\nif(window.confirm('Database appears to be empty. Would you like to initialize it?')){initializeDatabase();}}}};checkDatabase();// eslint-disable-next-line\n},[]);const handleMonthChange=month=>{setSelectedMonth(month);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transaction Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:initializeDatabase,disabled:isLoading,children:isLoading?'Initializing...':'Initialize Database'}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"month-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"month-select\",children:\"Select Month: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"month-select\",value:selectedMonth,onChange:e=>handleMonthChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"january\",children:\"January\"}),/*#__PURE__*/_jsx(\"option\",{value:\"february\",children:\"February\"}),/*#__PURE__*/_jsx(\"option\",{value:\"march\",children:\"March\"}),/*#__PURE__*/_jsx(\"option\",{value:\"april\",children:\"April\"}),/*#__PURE__*/_jsx(\"option\",{value:\"may\",children:\"May\"}),/*#__PURE__*/_jsx(\"option\",{value:\"june\",children:\"June\"}),/*#__PURE__*/_jsx(\"option\",{value:\"july\",children:\"July\"}),/*#__PURE__*/_jsx(\"option\",{value:\"august\",children:\"August\"}),/*#__PURE__*/_jsx(\"option\",{value:\"september\",children:\"September\"}),/*#__PURE__*/_jsx(\"option\",{value:\"october\",children:\"October\"}),/*#__PURE__*/_jsx(\"option\",{value:\"november\",children:\"November\"}),/*#__PURE__*/_jsx(\"option\",{value:\"december\",children:\"December\"})]})]}),/*#__PURE__*/_jsx(TransactionsTable,{apiBaseUrl:API_BASE_URL,selectedMonth:selectedMonth}),/*#__PURE__*/_jsx(Statistics,{apiBaseUrl:API_BASE_URL,selectedMonth:selectedMonth}),/*#__PURE__*/_jsx(BarChart,{apiBaseUrl:API_BASE_URL,selectedMonth:selectedMonth}),/*#__PURE__*/_jsx(PieChart,{apiBaseUrl:API_BASE_URL,selectedMonth:selectedMonth})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionsTable","Statistics","BarChart","PieChart","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","App","selectedMonth","setSelectedMonth","isLoading","setIsLoading","error","setError","initializeDatabase","response","get","console","log","data","alert","err","checkDatabase","status","window","confirm","handleMonthChange","month","className","children","onClick","disabled","htmlFor","id","value","onChange","e","target","apiBaseUrl"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport TransactionsTable from './components/TransactionsTable/TransactionsTable';\nimport Statistics from './components/Statistics/Statistics';\nimport BarChart from './components/BarChart/BarChart';\nimport PieChart from './components/PieChart/PieChart';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  const [selectedMonth, setSelectedMonth] = useState('march');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const initializeDatabase = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/initialize-database`);\n      console.log('Database initialized:', response.data);\n      alert('Database initialized successfully!');\n    } catch (err) {\n      console.error('Error initializing database:', err);\n      setError('Failed to initialize database. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Check if database needs initialization\n    const checkDatabase = async () => {\n      try {\n        // Try to fetch transactions to see if DB is initialized\n        await axios.get(`${API_BASE_URL}/transactions?month=${selectedMonth}&page=1&perPage=1`);\n      } catch (err) {\n        if (err.response && err.response.status === 500) {\n          // Database might need initialization\n          if (window.confirm('Database appears to be empty. Would you like to initialize it?')) {\n            initializeDatabase();\n          }\n        }\n      }\n    };\n    \n    checkDatabase();\n    // eslint-disable-next-line\n  }, []);\n\n  const handleMonthChange = (month) => {\n    setSelectedMonth(month);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Transaction Dashboard</h1>\n        <button onClick={initializeDatabase} disabled={isLoading}>\n          {isLoading ? 'Initializing...' : 'Initialize Database'}\n        </button>\n        {error && <div className=\"error-message\">{error}</div>}\n      </header>\n\n      <main className=\"dashboard-container\">\n        <div className=\"month-selector\">\n          <label htmlFor=\"month-select\">Select Month: </label>\n          <select \n            id=\"month-select\" \n            value={selectedMonth} \n            onChange={(e) => handleMonthChange(e.target.value)}\n          >\n            <option value=\"january\">January</option>\n            <option value=\"february\">February</option>\n            <option value=\"march\">March</option>\n            <option value=\"april\">April</option>\n            <option value=\"may\">May</option>\n            <option value=\"june\">June</option>\n            <option value=\"july\">July</option>\n            <option value=\"august\">August</option>\n            <option value=\"september\">September</option>\n            <option value=\"october\">October</option>\n            <option value=\"november\">November</option>\n            <option value=\"december\">December</option>\n          </select>\n        </div>\n\n        <TransactionsTable \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <Statistics \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <BarChart \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <PieChart \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAClB,MAAO,CAAAC,iBAAiB,KAAM,kDAAkD,CAChF,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAC3D,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAC,OAAO,CAAC,CAC3D,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAmB,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACFH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,GAAGV,YAAY,sBAAsB,CAAC,CACvEW,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEH,QAAQ,CAACI,IAAI,CAAC,CACnDC,KAAK,CAAC,oCAAoC,CAAC,CAC7C,CAAE,MAAOC,GAAG,CAAE,CACZJ,OAAO,CAACL,KAAK,CAAC,8BAA8B,CAAES,GAAG,CAAC,CAClDR,QAAQ,CAAC,kDAAkD,CAAC,CAC9D,CAAC,OAAS,CACRF,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDf,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAA0B,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF;AACA,KAAM,CAAAzB,KAAK,CAACmB,GAAG,CAAC,GAAGV,YAAY,uBAAuBE,aAAa,mBAAmB,CAAC,CACzF,CAAE,MAAOa,GAAG,CAAE,CACZ,GAAIA,GAAG,CAACN,QAAQ,EAAIM,GAAG,CAACN,QAAQ,CAACQ,MAAM,GAAK,GAAG,CAAE,CAC/C;AACA,GAAIC,MAAM,CAACC,OAAO,CAAC,gEAAgE,CAAC,CAAE,CACpFX,kBAAkB,CAAC,CAAC,CACtB,CACF,CACF,CACF,CAAC,CAEDQ,aAAa,CAAC,CAAC,CACf;AACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,iBAAiB,CAAIC,KAAK,EAAK,CACnClB,gBAAgB,CAACkB,KAAK,CAAC,CACzB,CAAC,CAED,mBACEtB,KAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BxB,KAAA,WAAQuB,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5B1B,IAAA,OAAA0B,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9B1B,IAAA,WAAQ2B,OAAO,CAAEhB,kBAAmB,CAACiB,QAAQ,CAAErB,SAAU,CAAAmB,QAAA,CACtDnB,SAAS,CAAG,iBAAiB,CAAG,qBAAqB,CAChD,CAAC,CACRE,KAAK,eAAIT,IAAA,QAAKyB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEjB,KAAK,CAAM,CAAC,EAChD,CAAC,cAETP,KAAA,SAAMuB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eACnCxB,KAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B1B,IAAA,UAAO6B,OAAO,CAAC,cAAc,CAAAH,QAAA,CAAC,gBAAc,CAAO,CAAC,cACpDxB,KAAA,WACE4B,EAAE,CAAC,cAAc,CACjBC,KAAK,CAAE1B,aAAc,CACrB2B,QAAQ,CAAGC,CAAC,EAAKV,iBAAiB,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAL,QAAA,eAEnD1B,IAAA,WAAQ+B,KAAK,CAAC,SAAS,CAAAL,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC1B,IAAA,WAAQ+B,KAAK,CAAC,UAAU,CAAAL,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C1B,IAAA,WAAQ+B,KAAK,CAAC,OAAO,CAAAL,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC1B,IAAA,WAAQ+B,KAAK,CAAC,OAAO,CAAAL,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC1B,IAAA,WAAQ+B,KAAK,CAAC,KAAK,CAAAL,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChC1B,IAAA,WAAQ+B,KAAK,CAAC,MAAM,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC1B,IAAA,WAAQ+B,KAAK,CAAC,MAAM,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC1B,IAAA,WAAQ+B,KAAK,CAAC,QAAQ,CAAAL,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC1B,IAAA,WAAQ+B,KAAK,CAAC,WAAW,CAAAL,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC5C1B,IAAA,WAAQ+B,KAAK,CAAC,SAAS,CAAAL,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC1B,IAAA,WAAQ+B,KAAK,CAAC,UAAU,CAAAL,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C1B,IAAA,WAAQ+B,KAAK,CAAC,UAAU,CAAAL,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACpC,CAAC,EACN,CAAC,cAEN1B,IAAA,CAACL,iBAAiB,EAChBwC,UAAU,CAAEhC,YAAa,CACzBE,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFL,IAAA,CAACJ,UAAU,EACTuC,UAAU,CAAEhC,YAAa,CACzBE,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFL,IAAA,CAACH,QAAQ,EACPsC,UAAU,CAAEhC,YAAa,CACzBE,aAAa,CAAEA,aAAc,CAC9B,CAAC,cAEFL,IAAA,CAACF,QAAQ,EACPqC,UAAU,CAAEhC,YAAa,CACzBE,aAAa,CAAEA,aAAc,CAC9B,CAAC,EACE,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}