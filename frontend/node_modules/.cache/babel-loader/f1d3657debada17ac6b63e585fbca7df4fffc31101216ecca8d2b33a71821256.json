{"ast":null,"code":"var _jsxFileName = \"E:\\\\Roxiler\\\\mern-transaction-dashboard\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport TransactionsTable from './/components/TransactionsTable';\nimport Statistics from './/components/Statistics';\nimport BarChart from './/components/BarChart';\nimport PieChart from './/components/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState('march');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const initializeDatabase = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/initialize-database`);\n      console.log('Database initialized:', response.data);\n      alert('Database initialized successfully!');\n    } catch (err) {\n      console.error('Error initializing database:', err);\n      setError('Failed to initialize database. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Check if database needs initialization\n    const checkDatabase = async () => {\n      try {\n        // Try to fetch transactions to see if DB is initialized\n        await axios.get(`${API_BASE_URL}/transactions?month=${selectedMonth}&page=1&perPage=1`);\n      } catch (err) {\n        if (err.response && err.response.status === 500) {\n          // Database might need initialization\n          if (window.confirm('Database appears to be empty. Would you like to initialize it?')) {\n            initializeDatabase();\n          }\n        }\n      }\n    };\n    checkDatabase();\n  }, []);\n  const handleMonthChange = month => {\n    setSelectedMonth(month);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Transaction Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeDatabase,\n        disabled: isLoading,\n        children: isLoading ? 'Initializing...' : 'Initialize Database'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"month-select\",\n          children: \"Select Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"month-select\",\n          value: selectedMonth,\n          onChange: e => handleMonthChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"january\",\n            children: \"January\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"february\",\n            children: \"February\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"march\",\n            children: \"March\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"april\",\n            children: \"April\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"may\",\n            children: \"May\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"june\",\n            children: \"June\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"july\",\n            children: \"July\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"august\",\n            children: \"August\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"september\",\n            children: \"September\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"october\",\n            children: \"October\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"november\",\n            children: \"November\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"december\",\n            children: \"December\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n        apiBaseUrl: API_BASE_URL,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        apiBaseUrl: API_BASE_URL,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        apiBaseUrl: API_BASE_URL,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        apiBaseUrl: API_BASE_URL,\n        selectedMonth: selectedMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eVE+B0103jGSS23qHzk9TE3xxtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionsTable","Statistics","BarChart","PieChart","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","selectedMonth","setSelectedMonth","isLoading","setIsLoading","error","setError","initializeDatabase","response","get","console","log","data","alert","err","checkDatabase","status","window","confirm","handleMonthChange","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","id","value","onChange","e","target","apiBaseUrl","_c","$RefreshReg$"],"sources":["E:/Roxiler/mern-transaction-dashboard/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport TransactionsTable from './/components/TransactionsTable';\nimport Statistics from './/components/Statistics';\nimport BarChart from './/components/BarChart';\nimport PieChart from './/components/PieChart';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  const [selectedMonth, setSelectedMonth] = useState('march');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const initializeDatabase = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/initialize-database`);\n      console.log('Database initialized:', response.data);\n      alert('Database initialized successfully!');\n    } catch (err) {\n      console.error('Error initializing database:', err);\n      setError('Failed to initialize database. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Check if database needs initialization\n    const checkDatabase = async () => {\n      try {\n        // Try to fetch transactions to see if DB is initialized\n        await axios.get(`${API_BASE_URL}/transactions?month=${selectedMonth}&page=1&perPage=1`);\n      } catch (err) {\n        if (err.response && err.response.status === 500) {\n          // Database might need initialization\n          if (window.confirm('Database appears to be empty. Would you like to initialize it?')) {\n            initializeDatabase();\n          }\n        }\n      }\n    };\n    \n    checkDatabase();\n  }, []);\n\n  const handleMonthChange = (month) => {\n    setSelectedMonth(month);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Transaction Dashboard</h1>\n        <button onClick={initializeDatabase} disabled={isLoading}>\n          {isLoading ? 'Initializing...' : 'Initialize Database'}\n        </button>\n        {error && <div className=\"error-message\">{error}</div>}\n      </header>\n\n      <main className=\"dashboard-container\">\n        <div className=\"month-selector\">\n          <label htmlFor=\"month-select\">Select Month: </label>\n          <select \n            id=\"month-select\" \n            value={selectedMonth} \n            onChange={(e) => handleMonthChange(e.target.value)}\n          >\n            <option value=\"january\">January</option>\n            <option value=\"february\">February</option>\n            <option value=\"march\">March</option>\n            <option value=\"april\">April</option>\n            <option value=\"may\">May</option>\n            <option value=\"june\">June</option>\n            <option value=\"july\">July</option>\n            <option value=\"august\">August</option>\n            <option value=\"september\">September</option>\n            <option value=\"october\">October</option>\n            <option value=\"november\">November</option>\n            <option value=\"december\">December</option>\n          </select>\n        </div>\n\n        <TransactionsTable \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <Statistics \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <BarChart \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n        \n        <PieChart \n          apiBaseUrl={API_BASE_URL} \n          selectedMonth={selectedMonth} \n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}